https://www.geeksforgeeks.org/problems/print-a-binary-tree-in-vertical-order/1 
karlio bhai hashmap Se
static ArrayList <Integer> verticalOrder(Node root)
    {
        // add your code here
        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(0,root));
        int[] range = new int[]{Integer.MAX_VALUE,0};
        HashMap<Integer,ArrayList<Integer>> map = new HashMap<>();
        while(!queue.isEmpty()){
            int size = queue.size();
            for(int i =0;i<size;i++){
                Pair curr = queue.poll();
                if(curr.level < range[0]){
                    range[0] = curr.level;
                }
                else if(curr.level > range[1]){
                    range[1] = curr.level;
                }
                if(!map.containsKey(curr.level)){
                    map.put(curr.level,new ArrayList<>());
                }
                map.get(curr.level).add(curr.node.data);
                addChildren(curr,queue);
            }
        }
        ArrayList<Integer> res = new ArrayList<>();
        for(int i=range[0];i<=range[1];i++){
            ArrayList<Integer> curr = map.get(i);
            res.addAll(curr);
        }
        return res;
    }

    

https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/
https://www.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/1
https://leetcode.com/problems/all-possible-full-binary-trees/description/

https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/description/